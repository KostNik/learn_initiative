version: 2.1
executors:
  app-build:
    environment:
      IMAGE_NAME: learning_initiative
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    docker:
      - image: circleci/openjdk:11-jdk

  docker-publisher:
    environment:
      IMAGE_NAME: learning_initiative
    docker:
      - image: circleci/buildpack-deps:stretch

jobs:
  build:
    executor: app-build
    working_directory: ~/repo

    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      # run tests!
      - run: gradle clean test
      - run:
          name: Save test results
          command: |
            mkdir -p ~/repo/test-results/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/repo/test-results/ \;
          when: always
      - store_test_results:
          path: ~/repo/test-results/

      # run build!
      - run: gradle clean build

      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            docker build -t $IMAGE_NAME:latest .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar

  publish-latest:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_TOKEN" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            IMAGE_TAG="0.0.${CIRCLE_BUILD_NUM}"
            docker tag $IMAGE_NAME:latest $DOCKERHUB_NAMESPACE/$IMAGE_NAME:latest
            docker push $DOCKERHUB_NAMESPACE/$IMAGE_NAME:latest
            docker tag $IMAGE_NAME:latest $DOCKERHUB_NAMESPACE/$IMAGE_NAME:$IMAGE_TAG
            docker push $DOCKERHUB_NAMESPACE/$IMAGE_NAME:$IMAGE_TAG

workflows:
  version: 2
  build-master:
    jobs:
      - build:
          filters:
            branches:
              only: master
      - publish-latest:
          requires:
            - build
          filters:
            branches:
              only: master